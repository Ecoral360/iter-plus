import { iter } from '../iter';
export const op = {
    not(f) {
        return ((...arg) => !f(...arg));
    },
    eq(val) {
        return (other) => val === other;
    },
    count(it) {
        return iter(it).reduce((prev) => prev + 1, 0);
    },
    sum(it) {
        return iter(it).reduce((prev, curr) => prev + curr, 0);
    },
    square(it) {
        return iter(it).map((n) => n * n);
    },
    pow(n) { },
    /**
     * Greater Than predicate
     */
    gt(n) {
        return (x) => x > n;
    },
    /**
     * Greater Than or Equal predicate
     */
    gte(n) {
        return (x) => x >= n;
    },
    /**
     * Lesser Than predicate
     */
    lt(n) {
        return (x) => x < n;
    },
    /**
     * Lesser Than or Equal predicate
     */
    lte(n) {
        return (x) => x <= n;
    },
    join(sep, transform = (arg) => `${arg}`) {
        return (it) => iter(it).reduce((prev, curr, idx) => idx === 0 ? transform(curr) : prev + sep + transform(curr), '');
    },
    prop(name) {
        return (obj) => obj[name];
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3AuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL29wL29wLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBUSxJQUFJLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFckMsTUFBTSxDQUFDLE1BQU0sRUFBRSxHQUFHO0lBQ2hCLEdBQUcsQ0FBcUMsQ0FBSTtRQUMxQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEdBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBTSxDQUFDO0lBQzVDLENBQUM7SUFFRCxFQUFFLENBQUksR0FBTTtRQUNWLE9BQU8sQ0FBQyxLQUFRLEVBQUUsRUFBRSxDQUFDLEdBQUcsS0FBSyxLQUFLLENBQUM7SUFDckMsQ0FBQztJQUVELEtBQUssQ0FBSSxFQUFlO1FBQ3RCLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNoRCxDQUFDO0lBRUQsR0FBRyxDQUFDLEVBQW9CO1FBQ3RCLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksR0FBRyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDekQsQ0FBQztJQUVELE1BQU0sQ0FBQyxFQUFvQjtRQUN6QixPQUFPLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBRUQsR0FBRyxDQUFDLENBQVMsSUFBRyxDQUFDO0lBRWpCOztPQUVHO0lBQ0gsRUFBRSxDQUFDLENBQVM7UUFDVixPQUFPLENBQUMsQ0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFFRDs7T0FFRztJQUNILEdBQUcsQ0FBQyxDQUFTO1FBQ1gsT0FBTyxDQUFDLENBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRUQ7O09BRUc7SUFDSCxFQUFFLENBQUMsQ0FBUztRQUNWLE9BQU8sQ0FBQyxDQUFTLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUVEOztPQUVHO0lBQ0gsR0FBRyxDQUFDLENBQVM7UUFDWCxPQUFPLENBQUMsQ0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFRCxJQUFJLENBQ0YsR0FBVyxFQUNYLFlBQWdDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxHQUFHLEdBQUcsRUFBRTtRQUVqRCxPQUFPLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FDWixJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUNiLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsRUFBRSxDQUNsQixHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxHQUFHLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUM1RCxFQUFFLENBQ0gsQ0FBQztJQUNOLENBQUM7SUFFRCxJQUFJLENBQ0YsSUFBTztRQUVQLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM1QixDQUFDO0NBQ0YsQ0FBQyJ9